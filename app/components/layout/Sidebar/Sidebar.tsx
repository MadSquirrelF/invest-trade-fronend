import { FC, useEffect, useState } from 'react';
import Link from 'next/link';
import { CSSTransition } from 'react-transition-group';
import styles from './Sidebar.module.scss';
import Button from '@/components/ui/form-elements/Button';

const Sidebar: FC = () => {
  const [showCookie, setShowCookie] = useState(false);

  useEffect(() => {
    const popStatus = localStorage.getItem(`pop_status`);
    if (popStatus !== `1`) {
      setShowCookie(true);
      localStorage.setItem(`pop_status`, `1`);
    }
  }, []);

  return (
    <CSSTransition
      in={showCookie}
      classNames="slide-animation"
      timeout={300}
      unmountOnExit
    >
      <div className={styles.sidebar}>
        <div className={styles.container}>
          {/* <div className={styles.image}>
            <Image src={cookie} alt={'cookie image'} draggable={false} fill />
          </div> */}
          <div className={styles.text}>
            <h1>–ú–´ –ò–°–ü–û–õ–¨–ó–£–ï–ú COOKIE üç™</h1>
            <p>
              –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º cookies –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏ —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞. –ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à —Å–∞–π—Ç, –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤ cookie –∏
              {` `}
              <Link href="/404">–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</Link>
              .
              –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏—Å—å, –ø–æ–∫–∏–Ω—å—Ç–µ —Å–∞–π—Ç.

            </p>
          </div>
          <Button onClick={() => setShowCookie(false)}>–û–ö</Button>
        </div>
      </div>
    </CSSTransition>
  );
};

export default Sidebar;
